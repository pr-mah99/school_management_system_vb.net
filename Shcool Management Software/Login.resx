<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8mvi//J72D/ye9fP8n
        vYj/Jr2M/yi9h/8luykAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8usGr/Lq50/y+ueP8t
        r4L/LbCH/y2ufv8tr4P/La92/yyvYwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP80oVT/MqJl/zKhk/83
        phcAAAAAAAAAAAAAAAD/OZwS/zOhkv8yn2D/NKBTAAAAAAAAAAAAAAAAAAAAAP85jgn/OZOH/ziTlf9A
        nwgAAAAAAAAAAAAAAAAAAAAAAAAAAP8zmQX/OJSR/ziThP8rgAYAAAAAAAAAAAAAAAD/PYUy/z+EUf9A
        h0gAAAAA/7DRqv+x0X//qtUMAAAAAAAAAAAAAAAA/z+FSf8/hW3/QYVHAAAAAAAAAAD/t7c1/7a2d/+2
        tnf/trZ3/7a2d/+2tuj/trb//7a26f+1tVMAAAAAAAAAAP9JgA7/RXd6/0V4cwAAAAAAAAAA/7ydOf+8
        nIj/vJyI/7yciP+8nIj/vJvo/7yb//+8m+n/u5pWAAAAAAAAAAD/RGYP/0xpef9LanMAAAAAAAAAAAAA
        AAD/Ulwy/1JbUf9RXEgAAAAA/8OArv/DgX//v4AMAAAAAAAAAAAAAAAA/1BbSf9QXm3/UFtJAAAAAAAA
        AAAAAAAA/1VVCf9XTYf/V0+V/2BACAAAAAAAAAAAAAAAAAAAAAAAAAAA/2ZmBf9XT5L/WU+H/2BACAAA
        AAAAAAAAAAAAAAAAAAD/XkBU/11AcP9eQJP/WUMXAAAAAAAAAAAAAAAA/2I7Df9dP5H/XEBk/15AVAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9kMmv/ZDJr/2Mzd/9kMnv/ZDN4/2Mzfv9jM4H/YjJ1/2IxYwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2cmL/9pJIH/aSV8/2kkd/9oI4n/aCV9/2olKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/R8AAP5fAAD77wAA5/MAAP3/AAD8fwAAwH8AAP3/
        AADn8wAA++8AAP/fAAD9vwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        PzUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9cPjr/Xj3W/109jv9dPiH/Xj3j/148TAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/YTVp/2E24/9i
        NjT/YDZV/2E24/9hNbr/YTdh/2M6H/9aPBH/XjYT/2A3Jf9iNmP/YDa5/2A23v9gNVL/YjY5/2E15f9g
        N28AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/ZC9X/2Qu7P9lL4n/ZCwX/2UuU/9jL5//ZC7W/2Qv6/9kL+7/ZC/d/2MvrP9lMFv/YTEV/2MviP9k
        Luz/YzBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/Zise/2copv9nKO7/ZiiY/2goU/9qKyT/YysS/2gjFv9lKiv/aClR/2gnm/9n
        KOb/ZymX/2gmGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/20kHP9qInH/aiK2/2oh3v9qIe7/aiHr/2oh1v9p
        Ibj/ayJp/2ogGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////A///+Px///MDP//s/N//0/8v/6f
        /l/8v/9P/X//r/17/6//8P/X//A/1+AAH9fgAB/X//A/1//w/9f9e/+v/X//r/y//0/+n/5f/0/8v/+z
        83//zAz//+Px///8D///////////////////////
</value>
  </data>
</root>